#include "imports/stdlib.fc";


;; storage#_ microusd_per_ton: uint32  // 2.3232 USD -> 2323200
;;     interest_rate: uint16  // 1% -> 100
;;     last_update: uint64
;;     vaults: (HashmapE 267 Vault)
;;     jetton_master_address: MsgAddressInt
;;     jetton_wallet_code: ^Cell
;;     = Storage;

(int, int, int, cell, slice, cell) load_data() {
    slice ds = get_data().begin_parse();
    return (ds~load_uint(32),
            ds~load_uint(16),
            ds_load_uint(64),
            ds~load_dict(),
            ds~load_msg_addr(),
            ds~load_ref());
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);

    if (flags & 1) { ;; ignore all bounced messages
        return ();
    }

    slice sender_address = cs~load_msg_addr();
    (int microusd_per_ton, int interest_rate, int last_update, cell vaults, slice jetton_master_address, cell jetton_wallet_code) = load_data();
}
